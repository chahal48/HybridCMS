@model HybridCMS.Models.PageViewModel
@{
    ViewBag.Title = "Create Page";
    Layout = "~/Views/Shared/_CMSLayout.cshtml";
}

<!-- Create Page Start -->
<div class="container-xxl py-6" style="padding-bottom:0 !important;">
    <div class="container">
        <div class="section-header text-center mx-auto mb-5" style="max-width: 500px;">
        </div>
        <div class="row g-6 justify-content-center">
            <div class="col-lg-12 col-md-12">
                @using (Html.BeginForm("Create", "Page", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-lg-7 col-md-12">
                            <div class="col-md-10 mb-2">
                                @Html.EditorFor(model => model.PageTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Page Title" } })
                                @Html.ValidationMessageFor(model => model.PageTitle, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-10 mb-2">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="basic-addon1">@@</span>
                                    </div>
                                    @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control", placeholder = "URL" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.initialURL)
                            </div>
                            <div class="col-md-10 form-floating mb-2">
                                <textarea class="form-control" placeholder="Description" id="Description" name="Description" style="height: 100px; max-height: 280px;"></textarea>
                                <label for="Description">Description</label>
                            </div>
                        </div>
                        <div class="col-lg-5 col-md-12 mb-3">
                            <div class="col-lg-5 mb-3">
                                <img src="~/Upload/NoImage.png" id="imagePreview" alt="" class="img-thumbnail" style="width: 300px; height: 250px;">
                            </div>
                            <div class="col-lg-5 mb-3">
                                <input type="file" id="Image" name="Image" onchange="return fileValidation()" />
                            </div>
                            <div class="col-lg-5 col-md-12">
                                <div class="row">
                                    <div class="col-md-6">
                                        @Html.ActionLink("Cancel", "AdminDashboard", "CMS", new { }, new { @class = "btn btn-outline-secondary border-2 py-2 px-4 rounded-pill fw-bold " })
                                    </div>
                                    <div class="col-md-6">
                                        <button type="submit" class="btn btn-outline-primary border-2 py-2 px-4 rounded-pill fw-bold">Create</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- Create Page End -->
@section scripts{
    <script>
        $(function () {
            $("#PageTitle").focus();
        });
        var Title = document.getElementById('PageTitle');
        var URL = document.getElementById('URL');
        Title.addEventListener('input', function (event) {
            var r = /[^a-z.]/gi;
            var key = event.key;
            URL.value = this.value.replace(r, '');
            if (!r.test(key)) {
                return;
            }
        })
        $('#URL').bind('input', function () {
            var c = this.selectionStart,
                r = /[^a-z.]/gi,
                v = $(this).val();
            if (r.test(v)) {
                $(this).val(v.replace(r, ''));
                c--;
            }
            this.setSelectionRange(c, c);
        });
    </script>
    <script>
        function fileValidation() {
            const alertMessage = "Invalid file type!! \nOnly files with the following extension are allowed :  jpg jpeg png gif.";
            var baseUrl = document.location.origin;
            var DefaultImagePath = baseUrl + '/Upload/NoImage.png';
            var fileInput = document.getElementById('Image');
            var filePath = fileInput.value;
            // Allowing file type
            var allowedExtensions =
                /(\.jpg|\.jpeg|\.png|\.gif)$/i;
            if (!allowedExtensions.exec(filePath)) {
                alert(alertMessage);
                fileInput.value = null;
                var DefaultImage = document.getElementById('imagePreview');
                $(DefaultImage).attr('src', DefaultImagePath);
                return false;
            }
            else {
                // Image preview
                if (fileInput.files && fileInput.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var Preview = document.getElementById('imagePreview');
                        $(Preview).attr('src', e.target.result);
                    };
                    reader.readAsDataURL(fileInput.files[0]);
                }
            }
        }
    </script>
    <script>
        $(document).ready(function () {
            $('#liCreatePage').addClass('active');
            $('#liCreate').addClass('active');
        });
    </script>
}

