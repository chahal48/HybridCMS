@model HybridCMS.Models.CMSLoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_CMSLoginLayout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
            <div class="card border-0 shadow rounded-5 my-5">
                <div class="card-body p-4 p-sm-5">
                    <h5 class="card-title text-center mb-5 fw-light fs-5"><small class="fa fa-user text-body"></small>&nbsp;Sign In</h5>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-floating mb-3">
                            @if (@TempData["AlertMsg"] != null)
                            {
                                <div class="alert alert-success" role="alert">
                                    @TempData["AlertMsg"]
                                </div>
                            }
                        </div>
                        <div class="form-floating mb-3">
                            @Html.EditorFor(model => model.EmailorUsername, new { htmlAttributes = new { @class = "form-control", placeholder = "Email or Username" } })
                            @Html.LabelFor(model => model.EmailorUsername)
                            @Html.ValidationMessageFor(model => model.EmailorUsername, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-floating mb-3">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                            @Html.LabelFor(model => model.Password)
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-check mb-3">
                            @Html.EditorFor(model => model.RemenberMe, new { htmlAttributes = new { @class = "form-check-input" } })
                            @Html.LabelFor(model => model.RemenberMe)
                            &nbsp;
                            <input id="showpass" type="checkbox" onclick="showPassword()">
                            <label class="form-check-label" for="showpass">Show password</label>
                        </div>
                        <div class="form-check mb-3">
                            <input type="submit" value="Sign in" class="btn btn-primary btn-login text-uppercase fw-bold float-end" />
                        </div>
                        <br />
                        <div class="form-check mb-3">
                            @Html.ActionLink("Forgot Password", "ForgotPassword", "CMS", new { }, new { @class = "text-uppercase float-end" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        function showPassword() {
            debugger;
            var x = document.getElementById("Password");
            if (x.type === "password") {
                x.type = "text";
            } else {
                x.type = "password";
            }
        }
        $(document).ready(function () {
            // show the alert
            setTimeout(function () {
                $(".alert").alert('close');
            }, 1500);
        });
    </script>
    <script>
        var text = document.getElementById('EmailorUsername');
        text.addEventListener('input', function (e) {
            var keyCode = e.keyCode ? e.keyCode : e.which;
            this.value = this.value.replace(/\s/g, '')
            if (keyCode === 32) return;
        })
        var text = document.getElementById('Password');
        text.addEventListener('input', function (e) {
            var keyCode = e.keyCode ? e.keyCode : e.which;
            this.value = this.value.replace(/\s/g, '')
            if (keyCode === 32) return;
        })
    </script>
}
