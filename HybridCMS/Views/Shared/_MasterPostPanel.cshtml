<div class="button-filter">
    <input id="cbIsSelected" type="checkbox" class="cbSelected">
</div>
<div class="button-filter">
    <button type="button" id="disableBtn"
            class="disableAndEnableBtn disable-button-filter" style="display:none;">
        Disable
    </button>
</div>
<div class="button-filter">
    <button type="button" id="enableBtn"
            class="disableAndEnableBtn enable-button-filter" style="display:none;">
        Enable
    </button>
</div>
<table class="display compact" id="postsPanelTable">
    <thead>
        <tr>
            <th>Id</th>
            <th>Post Heading</th>
            <th>Asset Name</th>
            <th>Author</th>
            <th>Deleted</th>
            <th>Created</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>
<script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
<script>
    function BindTableData() {
        let postsPanelTableVariable = $("#postsPanelTable").dataTable({
            ajax: {
                url: "/AdminMaster/GetAllPosts",
                dataSrc: ""
            },
            pageLength: 5,
            lengthMenu: [[5, 15, 30, -1], [5, 15, 30, 'All']],
            order: [],
            retrieve: true,
            columns: [
                {
                    data: "PostId"
                },
                {
                    data: "PostHeading",
                    render: function (data, type, post) {
                        return post.PostHeading;
                    }
                },
                {
                    data: "AssetName",
                    render: function (data, type, post) {
                        return post.AssetName;
                    }
                },
                {
                    data: "AuthorName",
                    render: function (data, type, post) {
                        return post.AuthorName;
                    }
                },
                {
                    data: "IsDeleted",
                    render: function (data, type, post) {
                        return ((post.IsDeleted ? "<span style='color: #F65005'>" : "<span style='color: #3CB815'>") + post.IsDeleted + "</span>");
                    }
                },
                {
                    data: "CreatedOn",
                    render: function (data, type, post) {
                        return ConvertToDateFromJson(post.CreatedOn);
                    }
                },
            ]
        });
        let table = $('#postsPanelTable').DataTable();
        $("#postsPanelTable_filter.dataTables_filter").append($("#enableBtn"));
        $("#postsPanelTable_filter.dataTables_filter").append($("#disableBtn"));
        $("#postsPanelTable_filter.dataTables_filter").append($("#cbIsSelected"));

        $('#postsPanelTable tbody').on('click', 'tr', function () {
            $(this).toggleClass('selected');
            cbSelectedProp(table.rows('.selected').data().length, table.rows().count());
        });

        $('#cbIsSelected').click(function (event) {  //on click
            this.checked ? (table.$('tr').addClass('selected')) : (table.$('tr').removeClass('selected'));
            cbSelectedClickProp(table.rows('.selected').data().length);
        });
        $('#disableBtn').click(function (event) {  //on click
            runDisableOrEnable(true);
        });
        $('#enableBtn').click(function (event) {  //on click
            runDisableOrEnable(false);
        });

        function runDisableOrEnable(IsDiable) {
            let selectedItems = new Array();
            $.each(table.rows('.selected').data(), function (i, item) {
                selectedItems.push(item.PostId);
            });
            IsDiable ? DisablePost(selectedItems) : EnablePost(selectedItems);
        }
    }
</script>